

buildscript {
  repositories {
    jcenter()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "com.diffplug.spotless:spotless-plugin-gradle:3.13.0"
    classpath "de.thetaphi:forbiddenapis:2.5"
    classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:$spotbugsPluginVersion"
  }
}

group = 'com.github.wreulicke.compatible4j'

subprojects {
  group = rootProject.group

  apply plugin: 'java-library'
  apply plugin: 'jacoco'
  apply plugin: "com.github.spotbugs"
  apply plugin: "maven-publish"

  // apply plugin: "pmd"
  apply plugin: "de.thetaphi.forbiddenapis"
  apply plugin: "com.diffplug.gradle.spotless"
  
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
  
  tasks.withType(AbstractCompile) each {
    it.options.encoding = "UTF-8"
  }

  compileJava {
    options.compilerArgs << "-Werror"
    options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-deprecation"
  }

  test {
    useJUnitPlatform {
      includeEngines 'junit-jupiter'
    }
  }

  repositories {
    jcenter()
  }

  dependencies {
    api "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testImplementation "org.junit.platform:junit-platform-runner:$junitPlatfromVersion"
    testImplementation "org.junit.platform:junit-platform-launcher:$junitPlatfromVersion" // for IDE

    testImplementation "org.assertj:assertj-core:3.10.0"

    // pmd "net.sourceforge.pmd:pmd-java:$pmdVersion"
  }

  // pmd {
  //   consoleOutput = true
  //   toolVersion = "$pmdVersion"
  // }

  // pmdMain {
  //   ruleSetFiles = rootProject.files("pmd.xml")
  //   ruleSets = []  // To apply only the custom rules
  // }

  // pmdTest {
  //   ruleSetFiles = rootProject.files("pmd.xml")
  //   ruleSets = []  // To apply only the custom rules
  // }

  spotbugs {
    toolVersion = "$spotbugsVersion"
    effort = "max"
  }

  spotless {
    java{
      eclipse().configFile rootProject.file('eclipse-format-settings.xml')
      removeUnusedImports() 
      trimTrailingWhitespace()
      endWithNewline()
      indentWithSpaces()
    }
  }
  
  forbiddenApisMain {
    bundledSignatures += [
      'jdk-system-out',
      'jdk-unsafe-' + project.sourceCompatibility,
      'jdk-internal-' + project.sourceCompatibility
    ]
    ignoreFailures = false
  }

  forbiddenApisTest {
    bundledSignatures += [
      'jdk-system-out',
      'jdk-unsafe-' + project.sourceCompatibility,
      'jdk-internal-' + project.sourceCompatibility
    ]
    ignoreFailures = false
  }

}
